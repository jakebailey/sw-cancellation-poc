{
  "version": 3,
  "sources": ["../node_modules/vscode-jsonrpc/lib/common/ral.js", "../node_modules/vscode-jsonrpc/lib/common/disposable.js", "../node_modules/vscode-jsonrpc/lib/common/events.js", "../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js", "../node_modules/vscode-jsonrpc/lib/browser/ril.js", "../node_modules/vscode-jsonrpc/lib/common/is.js", "../node_modules/vscode-jsonrpc/lib/common/messages.js", "../node_modules/vscode-jsonrpc/lib/common/cancellation.js", "../node_modules/vscode-jsonrpc/lib/common/messageReader.js", "../node_modules/vscode-jsonrpc/lib/common/semaphore.js", "../node_modules/vscode-jsonrpc/lib/common/messageWriter.js", "../node_modules/vscode-jsonrpc/lib/common/linkedMap.js", "../node_modules/vscode-jsonrpc/lib/common/connection.js", "../node_modules/vscode-jsonrpc/lib/common/api.js", "../node_modules/vscode-jsonrpc/lib/browser/main.js", "../node_modules/vscode-jsonrpc/browser.js", "../src/sw/page.ts", "../src/shared/cancellation/sender.ts", "../src/shared/page.ts", "../src/shared/requests.ts", "../src/sw/common.ts"],
  "sourcesContent": ["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n//# sourceMappingURL=disposable.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                ral_1.default().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n//# sourceMappingURL=events.js.map", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders() {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n//# sourceMappingURL=messageBuffer.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ral_1 = require(\"../common/ral\");\nconst disposable_1 = require(\"../common/disposable\");\nconst events_1 = require(\"../common/events\");\nconst messageBuffer_1 = require(\"../common/messageBuffer\");\nclass MessageBuffer extends messageBuffer_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n        this.asciiDecoder = new TextDecoder('ascii');\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, _encoding) {\n        return (new TextEncoder()).encode(value);\n    }\n    toString(value, encoding) {\n        if (encoding === 'ascii') {\n            return this.asciiDecoder.decode(value);\n        }\n        else {\n            return (new TextDecoder(encoding)).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer;\n        }\n        else {\n            return buffer.slice(0, length);\n        }\n    }\n    allocNative(length) {\n        return new Uint8Array(length);\n    }\n}\nMessageBuffer.emptyBuffer = new Uint8Array(0);\nclass ReadableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n        this._onData = new events_1.Emitter();\n        this._messageListener = (event) => {\n            const blob = event.data;\n            blob.arrayBuffer().then((buffer) => {\n                this._onData.fire(new Uint8Array(buffer));\n            });\n        };\n        this.socket.addEventListener('message', this._messageListener);\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    onData(listener) {\n        return this._onData.event(listener);\n    }\n}\nclass WritableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    write(data, encoding) {\n        if (typeof data === 'string') {\n            if (encoding !== undefined && encoding !== 'utf-8') {\n                throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${encoding}`);\n            }\n            this.socket.send(data);\n        }\n        else {\n            this.socket.send(data);\n        }\n        return Promise.resolve();\n    }\n    end() {\n        this.socket.close();\n    }\n}\nconst _textEncoder = new TextEncoder();\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                if (options.charset !== 'utf-8') {\n                    throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${options.charset}`);\n                }\n                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                if (!(buffer instanceof Uint8Array)) {\n                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);\n                }\n                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (socket) => new ReadableStreamWrapper(socket),\n        asWritableStream: (socket) => new WritableStreamWrapper(socket)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            return setTimeout(callback, ms, ...args);\n        },\n        clearTimeout(handle) {\n            clearTimeout(handle);\n        },\n        setImmediate(callback, ...args) {\n            return setTimeout(callback, 0, ...args);\n        },\n        clearImmediate(handle) {\n            clearTimeout(handle);\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        ral_1.default.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n//# sourceMappingURL=ril.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n//# sourceMappingURL=is.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isResponseMessage = exports.isNotificationMessage = exports.isRequestMessage = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = ErrorCodes.jsonrpcReservedErrorRangeStart;\n    ErrorCodes.MessageWriteError = -32099;\n    ErrorCodes.MessageReadError = -32098;\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = ErrorCodes.jsonrpcReservedErrorRangeEnd;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        return {\n            code: this.code,\n            message: this.message,\n            data: this.data,\n        };\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\n/**\n * Tests if the given message is a request message\n */\nfunction isRequestMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n}\nexports.isRequestMessage = isRequestMessage;\n/**\n * Tests if the given message is a notification message\n */\nfunction isNotificationMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && message.id === void 0;\n}\nexports.isNotificationMessage = isNotificationMessage;\n/**\n * Tests if the given message is a response message\n */\nfunction isResponseMessage(message) {\n    const candidate = message;\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n}\nexports.isResponseMessage = isResponseMessage;\n//# sourceMappingURL=messages.js.map", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = ral_1.default().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { ral_1.default().timer.clearTimeout(handle); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n//# sourceMappingURL=cancellation.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        var _a;\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options !== null && options !== void 0 ? options : 'utf-8';\n        }\n        else {\n            charset = (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = ral_1.default().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = ral_1.default().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders();\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('Content-Length');\n                if (!contentLength) {\n                    throw new Error('Header must provide a Content-Length property.');\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    throw new Error('Content-Length value must be a number.');\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            let p;\n            if (this.options.contentDecoder !== undefined) {\n                p = this.options.contentDecoder.decode(body);\n            }\n            else {\n                p = Promise.resolve(body);\n            }\n            p.then((value) => {\n                this.options.contentTypeDecoder.decode(value, this.options).then((msg) => {\n                    this.callback(msg);\n                }, (error) => {\n                    this.fireError(error);\n                });\n            }, (error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            ral_1.default().timer.clearTimeout(this.partialMessageTimer);\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = ral_1.default().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n//# sourceMappingURL=messageReader.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        ral_1.default().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n//# sourceMappingURL=semaphore.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        var _a, _b;\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options !== null && options !== void 0 ? options : 'utf-8', contentTypeEncoder: ral_1.default().applicationJson.encoder };\n        }\n        else {\n            return { charset: (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: (_b = options.contentTypeEncoder) !== null && _b !== void 0 ? _b : ral_1.default().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n//# sourceMappingURL=messageWriter.js.map", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[Symbol.toStringTag] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _a;\n        return (_a = this._head) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    get last() {\n        var _a;\n        return (_a = this._tail) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=linkedMap.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.NullLogger = exports.ProgressType = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.createCancellationTokenSource);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSquenceNumber = 0;\n    let unknownResponseSquenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = Object.create(null);\n    let starNotificationHandler = undefined;\n    const notificationHandlers = Object.create(null);\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = Object.create(null);\n    let requestTokens = Object.create(null);\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSquenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.isRequestMessage(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.isResponseMessage(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = ral_1.default().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            if (messages_1.isRequestMessage(message)) {\n                handleRequest(message);\n            }\n            else if (messages_1.isNotificationMessage(message)) {\n                handleNotification(message);\n            }\n            else if (messages_1.isResponseMessage(message)) {\n                handleResponse(message);\n            }\n            else {\n                handleInvalidMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\n                const key = createRequestQueueKey(message.params.id);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.isRequestMessage(toCancel)) {\n                    const strategy = options === null || options === void 0 ? void 0 : options.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response);\n                        return;\n                    }\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers[requestMessage.method];\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = String(requestMessage.id);\n            const cancellationSource = cancellationStrategy.receiver.createCancellationTokenSource(tokenKey);\n            requestTokens[tokenKey] = cancellationSource;\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but recevied none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    delete requestTokens[tokenKey];\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        delete requestTokens[tokenKey];\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        delete requestTokens[tokenKey];\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    delete requestTokens[tokenKey];\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                delete requestTokens[tokenKey];\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = String(responseMessage.id);\n            const responsePromise = responsePromises[key];\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise) {\n                delete responsePromises[key];\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            notificationHandler = (params) => {\n                const id = params.id;\n                const source = requestTokens[String(id)];\n                if (source) {\n                    source.cancel();\n                }\n            };\n        }\n        else {\n            const element = notificationHandlers[message.method];\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but recevied none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        if (type !== undefined) {\n                            if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                            }\n                            if (type.numberOfParams !== message.params.length) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${message.params.length} argumennts`);\n                            }\n                        }\n                        notificationHandler(...message.params);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = String(responseMessage.id);\n            const responseHandler = responsePromises[key];\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n                break;\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Recevied parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            messageWriter.write(notificationMessage);\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers[type] = { type: undefined, handler };\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        delete notificationHandlers[method];\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    cancellationStrategy.sender.sendCancellation(connection, id);\n                });\n            }\n            const result = new Promise((resolve, reject) => {\n                const requestMessage = {\n                    jsonrpc: version,\n                    id: id,\n                    method: method,\n                    params: messageParams\n                };\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                let responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                traceSendingRequest(requestMessage);\n                try {\n                    messageWriter.write(requestMessage);\n                }\n                catch (e) {\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\n                    responsePromise = null;\n                }\n                if (responsePromise) {\n                    responsePromises[String(id)] = responsePromise;\n                }\n            });\n            return result;\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers[type] = { handler: handler, type: undefined };\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        delete requestHandlers[method];\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new Error('Connection got disposed.');\n            Object.keys(responsePromises).forEach((key) => {\n                responsePromises[key].reject(error);\n            });\n            responsePromises = Object.create(null);\n            requestTokens = Object.create(null);\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            ral_1.default().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=connection.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.ProgressType = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.RAL = void 0;\nexports.CancellationStrategy = void 0;\nconst messages_1 = require(\"../common/messages\");\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst disposable_1 = require(\"../common/disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"../common/events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"../common/cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst messageReader_1 = require(\"../common/messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"../common/messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst connection_1 = require(\"../common/connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n//# sourceMappingURL=api.js.map", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.BrowserMessageWriter = exports.BrowserMessageReader = void 0;\nconst ril_1 = require(\"./ril\");\n// Install the browser runtime abstract.\nril_1.default.install();\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass BrowserMessageReader extends api_1.AbstractMessageReader {\n    constructor(context) {\n        super();\n        this._onData = new api_1.Emitter();\n        this._messageListener = (event) => {\n            this._onData.fire(event.data);\n        };\n        context.addEventListener('error', (event) => this.fireError(event));\n        context.onmessage = this._messageListener;\n    }\n    listen(callback) {\n        return this._onData.event(callback);\n    }\n}\nexports.BrowserMessageReader = BrowserMessageReader;\nclass BrowserMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(context) {\n        super();\n        this.context = context;\n        this.errorCount = 0;\n        context.addEventListener('error', (event) => this.fireError(event));\n    }\n    write(msg) {\n        try {\n            this.context.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.BrowserMessageWriter = BrowserMessageWriter;\nfunction createMessageConnection(reader, writer, logger, options) {\n    if (logger === undefined) {\n        logger = api_1.NullLogger;\n    }\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return api_1.createMessageConnection(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=main.js.map", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/browser/main');", "/// <reference lib=\"dom\" />\n\nimport * as rpc from 'vscode-jsonrpc/browser';\n\nimport { createSender } from '../shared/cancellation/sender';\nimport { log, logThrow, runClient } from '../shared/page';\nimport {\n    cancellationPath,\n    DeleteCanceledEventData,\n    RpcError,\n    RpcRequest,\n    RpcResponse,\n    SetCanceledEventData,\n    SwMessage,\n} from './common';\n\nif (!navigator.serviceWorker) {\n    logThrow('Service workers are not available');\n}\n\nrun();\n\nasync function run() {\n    log('registering service worker');\n    const reg = await navigator.serviceWorker.register('./sw.js', { scope: './' });\n    if (reg.installing) {\n        const sw = reg.installing || reg.waiting;\n        sw.onstatechange = () => {\n            if (sw.state === 'installed') {\n                console.log('state change reload');\n                window.location.reload();\n            }\n        };\n        logThrow('waiting for service worker');\n    } else if (reg.active) {\n        if (!navigator.serviceWorker.controller) {\n            logThrow(\"The service worker can't be contacted, likely due to a Ctrl+Shift+R. Try reloading.\");\n        }\n    } else {\n        logThrow('no service worker');\n    }\n\n    navigator.serviceWorker.addEventListener('message', (e) => {\n        const message = e.data as SwMessage;\n\n        if (message.type === 'log') {\n            log(`sw: ${message.message}`);\n        } else if (message.type === 'rpc') {\n            const { request, port } = message;\n\n            function send(m: RpcResponse | RpcError) {\n                port.postMessage(m);\n            }\n\n            handleRpcCall(request)\n                .then(send)\n                .catch((e) => send({ error: { code: -32000, message: e.toString() } }));\n        }\n    });\n\n    log('starting web worker');\n    const worker = new Worker('./sw-worker.js');\n\n    runClient(\n        worker,\n        // Use SW cancellation tokens when sending requests, but normal\n        // RPC-based cancellation when receiving requests.\n        {\n            receiver: rpc.CancellationReceiverStrategy.Message,\n            sender: createSender(sendCancellationMessage, deleteCancellationMessage),\n            // sender: createSender(sendCancellationRequest),\n        }\n    );\n}\n\nfunction sendCancellationMessage(id: rpc.CancellationId): void {\n    const message: SetCanceledEventData = { type: 'setCanceled', id };\n    // Note: this only works outside of a worker; for a version that works inside workers,\n    // see sendCancellationRequest.\n    globalThis.navigator.serviceWorker.controller?.postMessage(message);\n}\n\nfunction deleteCancellationMessage(id: rpc.CancellationId): void {\n    const message: DeleteCanceledEventData = { type: 'deleteCanceled', id };\n    // Note: this only works outside of a worker; for a version that works inside workers,\n    // see deleteCancellationRequest.\n    globalThis.navigator.serviceWorker.controller?.postMessage(message);\n}\n\n// Alternative method for triggering cancellation via a POST request to the service worker.\nfunction sendCancellationRequest(id: rpc.CancellationId): void {\n    const path = cancellationPath(id);\n    const request = new XMLHttpRequest();\n    request.open('POST', path); // OK to be async\n    request.send();\n}\n\nfunction deleteCancellationRequest(id: rpc.CancellationId): void {\n    const path = cancellationPath(id);\n    const request = new XMLHttpRequest();\n    request.open('DELETE', path); // OK to be async\n    request.send();\n}\n\nasync function handleRpcCall(request: RpcRequest): Promise<RpcResponse> {\n    if (request.method === 'hello') {\n        return {\n            result: `Hello from the page, ${request.params}!`,\n        };\n    }\n    throw new Error(`unsupported method ${request.method}`);\n}\n", "import type * as rpc from 'vscode-jsonrpc/browser';\n\nexport function createSender(\n    sendCancellation: (id: rpc.CancellationId) => void,\n    cleanup?: (id: rpc.CancellationId) => void,\n    dispose?: () => void\n): rpc.CancellationSenderStrategy {\n    return {\n        sendCancellation: (_conn, id) => sendCancellation(id),\n        cleanup: cleanup ?? (() => {}),\n        dispose,\n    };\n}\n", "/// <reference lib=\"dom\" />\n\nimport * as rpc from 'vscode-jsonrpc/browser';\n\nimport { addNumbersRequest, addNumbersSlowRequest, helloRequest } from './requests';\n\nexport function log(m = '') {\n    document.getElementById('log')!.innerText += `${m}\\n`;\n}\n\nexport function logThrow(m: string): never {\n    log(m);\n    throw new Error(m);\n}\n\nexport async function runClient(worker: Worker, cancellationStrategy: rpc.CancellationStrategy) {\n    const connection = rpc.createMessageConnection(\n        new rpc.BrowserMessageReader(worker),\n        new rpc.BrowserMessageWriter(worker),\n        /*logger*/ undefined,\n        {\n            cancellationStrategy,\n        }\n    );\n\n    connection.listen();\n\n    async function timeit<T>(fn: () => T): Promise<T> {\n        const before = performance.now();\n        try {\n            return await fn();\n        } finally {\n            log(`took ${Math.round(performance.now() - before)} ms`);\n        }\n    }\n\n    log();\n\n    await timeit(async () => {\n        log('calling addNumbers(1, 2)');\n        log(`result = ${await connection.sendRequest(addNumbersRequest, 1, 2)}`);\n    });\n\n    log();\n\n    await timeit(async () => {\n        log('addNumbersSlow(1, 2)');\n        log(`result = ${await connection.sendRequest(addNumbersSlowRequest, 1, 2)}`);\n    });\n\n    log();\n\n    await timeit(async () => {\n        const tokenSource = new rpc.CancellationTokenSource();\n        setTimeout(() => {\n            log('triggering cancellation');\n            tokenSource.cancel();\n        }, 1000);\n\n        try {\n            log('addNumbersSlow(1, 2) with cancellation after 1 second');\n            const result = await connection.sendRequest(addNumbersSlowRequest, 1, 2, tokenSource.token);\n            log(`unexpected result = ${result}`);\n        } catch (e) {\n            log(`threw ${e}`);\n        }\n    });\n\n    log();\n\n    await timeit(async () => {\n        log('hello(\"worker\"), implemented as an RPC call to the main page via the service worker');\n        try {\n            log(`result = ${await connection.sendRequest(helloRequest, 'worker')}`);\n        } catch (e) {\n            log(`threw ${e}`);\n        }\n    });\n}\n", "import * as rpc from 'vscode-jsonrpc/browser';\n\nexport const addNumbersRequest = new rpc.RequestType2<number, number, number, any>('addNumbers');\n\nexport const addNumbersSlowRequest = new rpc.RequestType2<number, number, number, any>('addNumbersSlow');\n\nexport const helloRequest = new rpc.RequestType1<string, string, any>('hello');\n", "import type * as rpc from 'vscode-jsonrpc/browser';\n\nconst cancellationPathMarker = '/@cancellation@/';\n\nexport function isCancellationPath(path: string): boolean {\n    return path.includes(cancellationPathMarker);\n}\n\n// Returns relative paths to ensure a subpath doesn't break.\nexport function cancellationPath(requestId: rpc.CancellationId): string {\n    return `.${cancellationPathMarker}${requestId}`;\n}\n\nfunction isClientSource(source: ExtendableMessageEvent['source']): source is Client {\n    if (source && typeof (source as Client).id === 'string') {\n        return true;\n    }\n    return false;\n}\n\nexport interface SetCanceledEventData {\n    readonly type: 'setCanceled';\n    readonly id: rpc.CancellationId;\n}\n\nexport interface SetCanceledEvent extends ExtendableMessageEvent {\n    readonly data: SetCanceledEventData;\n    readonly source: Client;\n}\n\nexport namespace SetCanceledEvent {\n    export function is(e: ExtendableMessageEvent): e is SetCanceledEvent {\n        return (\n            e.data.type === 'setCanceled' &&\n            isClientSource(e.source) &&\n            (typeof e.data.id === 'number' || typeof e.data.id === 'string')\n        );\n    }\n}\n\nexport interface DeleteCanceledEventData {\n    readonly type: 'deleteCanceled';\n    readonly id: rpc.CancellationId;\n}\n\nexport interface DeleteCanceledEvent extends ExtendableMessageEvent {\n    readonly data: DeleteCanceledEventData;\n    readonly source: Client;\n}\n\nexport namespace DeleteCanceledEvent {\n    export function is(e: ExtendableMessageEvent): e is DeleteCanceledEvent {\n        return (\n            e.data.type === 'deleteCanceled' &&\n            isClientSource(e.source) &&\n            (typeof e.data.id === 'number' || typeof e.data.id === 'string')\n        );\n    }\n}\n\nconst rpcPathMarker = '/@rpc@/';\n\nexport function isRpcPath(path: string): boolean {\n    return path.includes(rpcPathMarker);\n}\n\n// Returns relative paths to ensure a subpath doesn't break.\nexport function rpcPath(): string {\n    return `.${rpcPathMarker}`;\n}\n\nexport interface RpcRequest {\n    method: string;\n    params: any;\n}\n\nexport interface RpcResponse {\n    result: any;\n}\n\nexport interface RpcError {\n    error: {\n        code: number;\n        message: string;\n    };\n}\n\nexport interface SwLogMessage {\n    type: 'log';\n    message: string;\n}\n\nexport interface SwRpcMessage {\n    type: 'rpc';\n    request: RpcRequest;\n    port: MessagePort;\n}\n\nexport type SwMessage = SwLogMessage | SwRpcMessage;\n"],
  "mappings": "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",
  "names": []
}
